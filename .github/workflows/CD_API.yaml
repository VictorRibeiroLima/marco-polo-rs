name: Deploy API to ECR

on:
  push:
    branches:
      - master
    paths:
      - "api/**"
      - "env/**"
      - "core/**"
      - "macros/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - "sa-east-1-bundle.pem"
      - "yt-client-secret.json"
      - ".aws/api-ecs-task-definition.json"
      - ".github/workflows/CD_API.yaml"

env:
  AWS-REGION: sa-east-1

  ECS_TASK_DEFINITION: .aws/api-ecs-task-definition.json
  ECS_SERVICE: mp-api-prod-service
  ECS_CLUSTER: mp-api-prod-cluster
  ECS_CONTAINER_NAME: mp-api-prod-container

  ECR_REPOSITORY: marco-polo-api
  IMAGE_NAME: marco-polo-api

jobs:
  deploy:
    if: ${{ (!contains(github.event.head_commit.message, '[no-deploy]')||!contains(github.event.head_commit.message, '[no-deploy-api]')) }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Write .env
        run: npx dotenvenc -o ./.env -i ./env/.env.esc -d ${{ secrets.DOT_ENV_PASSWORD }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS-REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set ECR registry URL
        id: set-registry-url
        run: echo "ecr_registry=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_OUTPUT

      - name: Cache Docker build layers
        uses: docker/setup-buildx-action@v1

      - name: Build, tag, and push image to Amazon ECR
        uses: docker/build-push-action@v2
        id: build-image
        with:
          context: .
          file: api/Dockerfile
          push: true
          tags: ${{ steps.set-registry-url.outputs.ecr_registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set image url
        id: set-image-url
        run: echo "image=${{ steps.set-registry-url.outputs.ecr_registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.ECS_CONTAINER_NAME }}
          image: ${{ steps.set-image-url.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
